{"version":3,"file":"static/js/645.50ff61ff.chunk.js","mappings":"gZAQaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,6CAINE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,+RACII,EAQEC,GAIfC,GAAcN,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,+HAOXO,GAAgBP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAH,iHAObS,GAAQT,EAAAA,EAAAA,IAAOQ,EAAAA,EAAAA,MAAPR,CAAH,2CAILU,GAAQV,EAAAA,EAAAA,IAAOQ,EAAAA,EAAAA,QAAPR,CAAH,sFAOLW,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,CAAH,2J,SCoCtB,EAxEkB,WAChB,IAAMa,GAAcC,EAAAA,EAAAA,MAASC,MAAM,CACjCC,OAAOC,EAAAA,EAAAA,MACJC,QAAQ,2CAA4C,CACnDC,QAAS,gBACTC,oBAAoB,IAErBC,SAAS,YACZC,UAAUL,EAAAA,EAAAA,MACPM,IAAI,EAAG,8BACPC,IAAI,GAAI,6BACRH,SAAS,cAGRI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,MAAO,GACPM,SAAU,IAEZM,iBAAkBf,EAClBgB,SAAU,SAAAC,GACRC,QAAQC,IAAIF,EACb,IAGH,OACE,SAACG,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,UAACnC,EAAD,YACE,SAACG,EAAD,CAAWiC,GAAI,KACf,SAAC7B,EAAD,WACE,UAACC,EAAD,CAAesB,SAAUJ,EAAOW,aAAhC,WACE,UAAC3B,EAAD,4BAEE,SAACC,EAAD,CACE2B,KAAK,QACLC,KAAK,QACLC,YAAY,cACZC,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOK,OAAOd,MACrB2B,QAASlB,EAAOmB,QAAQ5B,MACxB6B,UAAWpB,EAAOqB,OAAO9B,SAE3B,SAACR,EAAA,mBAAD,CAAuB8B,KAAK,UAA5B,SACGb,EAAOqB,OAAO9B,YAInB,UAACP,EAAD,uBAEE,SAACC,EAAD,CACE2B,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOK,OAAOR,SACrBqB,QAASlB,EAAOmB,QAAQtB,SACxBuB,UAAWpB,EAAOqB,OAAOxB,YAE3B,SAACd,EAAA,mBAAD,CAAuB8B,KAAK,UAA5B,SACGb,EAAOqB,OAAOxB,eAGnB,SAACX,EAAD,CAAWoC,QAAQ,OAAOT,KAAK,SAA/B,6BAQX,C","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport * as image from '../../images/backgrounds/login.jpg';\nimport * as bigImage from '../../images/backgrounds/login_2x.jpg';\n\nexport const Layout = styled(Row)`\n  min-height: 90vh;\n`;\n\nexport const BigColumn = styled(Col)`\n  background-image: url(${image.default});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bigImage.default});\n  }\n`;\n\nexport const SmallColumn = styled(Col)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-left: 4px solid black;\n`;\n\nexport const FormContainer = styled(Form)`\n  width: 100%;\n  padding: 0 20px;\n  font-size: 18px;\n  /* outline: 2px solid red; */\n`;\n\nexport const Label = styled(Form.Label)`\n  display: block;\n`;\n\nexport const Input = styled(Form.Control)`\n  :focus,\n  :active {\n    outline: 4px solid #c0bdbd;\n  }\n`;\n\nexport const StyledBtn = styled(Button)`\n  position: relative;\n  left: 50%;\n  margin-top: 20px;\n  padding: 5px 30px;\n  font-size: 18px;\n  transform: translate(-50%);\n`;\n","import { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport {\n  Layout,\n  BigColumn,\n  SmallColumn,\n  FormContainer,\n  StyledBtn,\n  Label,\n  Input,\n} from './LoginPage.styled';\n\nconst LoginPage = () => {\n  const LoginSchema = object().shape({\n    email: string()\n      .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, {\n        message: 'Invalid email',\n        excludeEmptyString: true,\n      })\n      .required('Required'),\n    password: string()\n      .min(5, 'The password is too short!')\n      .max(15, 'The password is too long!')\n      .required('Required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: values => {\n      console.log(values);\n    },\n  });\n\n  return (\n    <Container fluid>\n      <Layout>\n        <BigColumn xs={7}></BigColumn>\n        <SmallColumn>\n          <FormContainer onSubmit={formik.handleSubmit}>\n            <Label>\n              Email address\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                isValid={formik.touched.email}\n                isInvalid={formik.errors.email}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formik.errors.email}\n              </Form.Control.Feedback>\n            </Label>\n\n            <Label>\n              Password\n              <Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n                isValid={formik.touched.password}\n                isInvalid={formik.errors.password}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formik.errors.password}\n              </Form.Control.Feedback>\n            </Label>\n            <StyledBtn variant=\"dark\" type=\"submit\">\n              Log In\n            </StyledBtn>\n          </FormContainer>\n        </SmallColumn>\n      </Layout>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Layout","styled","Row","BigColumn","Col","image","bigImage","SmallColumn","FormContainer","Form","Label","Input","StyledBtn","Button","LoginSchema","object","shape","email","string","matches","message","excludeEmptyString","required","password","min","max","formik","useFormik","initialValues","validationSchema","onSubmit","values","console","log","Container","fluid","xs","handleSubmit","name","type","placeholder","onChange","handleChange","value","isValid","touched","isInvalid","errors","variant"],"sourceRoot":""}