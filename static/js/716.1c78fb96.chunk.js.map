{"version":3,"file":"static/js/716.1c78fb96.chunk.js","mappings":"ocAoBaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,qEACC,SAAAE,GAAI,MACJ,aAAhBA,EAAKC,OAAwB,cAAgB,KADzB,IAKXC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,iUACJ,SAAAE,GAAI,MACF,aAAhBA,EAAKC,OAAwB,OAAS,iBADpB,IAEL,SAAAD,GAAI,MACD,aAAhBA,EAAKC,OAAwB,kBAAoB,MADhC,IAEC,SAAAD,GAAI,OAvBPC,EAuBsBD,EAAKC,OAtBrC,cAAW,aAAXA,EACIG,EACAC,EAFJ,KADU,IAAAJ,CAuBO,IAQF,SAAAD,GAAI,OAzBNC,EAyBwBD,EAAKC,OAxB1C,cAAW,aAAXA,EACIK,EACAC,EAFJ,KADa,IAAAN,CAyBM,IAIfO,GAAcV,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,8F,SCxCXW,EAAa,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAiC,IAAvBT,OAAAA,OAAuB,MAAd,QAAc,EAC5D,OACE,SAACU,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,UAACf,EAAD,CAAQI,OAAQA,EAAhB,WACE,SAACC,EAAD,CAAWW,GAAI,EAAGZ,OAAQA,KAC1B,SAACO,EAAD,UAAcE,QAIrB,C,yKCRYI,GAAgBhB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAPjB,CAAH,gFAMbkB,GAAQlB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAAA,MAAPjB,CAAH,2CAILmB,GAAQnB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAAA,QAAPjB,CAAH,sFAOLoB,GAAYpB,EAAAA,EAAAA,IAAOqB,EAAAA,EAAPrB,CAAH,2J,SCqDtB,EAlEkB,WAChB,IAAMsB,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,MAASC,MAAM,CACjCC,OAAOC,EAAAA,EAAAA,MACJC,QAAQ,2CAA4C,CACnDC,QAAS,gBACTC,oBAAoB,IAErBC,SAAS,YACZC,UAAUL,EAAAA,EAAAA,MAASI,SAAS,cAGxBE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPM,SAAU,IAEZI,iBAAkBb,EAClBc,SAAU,SAAAC,GACRjB,GAASkB,EAAAA,EAAAA,GAAMD,GAChB,IAGH,OACE,SAAC5B,EAAA,EAAD,WACE,UAACK,EAAD,CAAesB,SAAUJ,EAAOO,aAAhC,WACE,UAACvB,EAAD,4BAEE,SAACC,EAAD,CACEuB,KAAK,QACLC,KAAK,QACLC,YAAY,cACZC,SAAUX,EAAOY,aACjBC,MAAOb,EAAOK,OAAOZ,MACrBqB,QAASd,EAAOe,QAAQtB,MACxBuB,UAAWhB,EAAOiB,OAAOxB,SAE3B,SAACV,EAAA,mBAAD,CAAuB0B,KAAK,UAA5B,SACGT,EAAOiB,OAAOxB,YAInB,UAACT,EAAD,uBAEE,SAACC,EAAD,CACEuB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,SAAUX,EAAOY,aACjBC,MAAOb,EAAOK,OAAON,SACrBe,QAASd,EAAOe,QAAQhB,SACxBiB,UAAWhB,EAAOiB,OAAOlB,YAE3B,SAAChB,EAAA,mBAAD,CAAuB0B,KAAK,UAA5B,SACGT,EAAOiB,OAAOlB,eAGnB,SAACb,EAAD,CAAWgC,QAAQ,OAAOT,KAAK,SAA/B,wBAMP,C","sources":["components/AuthLayout/AuthLayout.styled.jsx","components/AuthLayout/AuthLayout.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport * as image from '../../images/backgrounds/login.jpg';\nimport * as image_reg from '../../images/backgrounds/register.jpg';\nimport * as bigImage from '../../images/backgrounds/login_2x.jpg';\nimport * as bigImage_reg from '../../images/backgrounds/register_2x.jpg';\n\nconst setBgImage = layout => {\n  return layout === 'register'\n    ? `url(${image_reg.default})`\n    : `url(${image.default})`;\n};\n\nconst setBigBgImage = layout => {\n  return layout === 'register'\n    ? `url(${bigImage_reg.default})`\n    : `url(${bigImage.default})`;\n};\n\nexport const Layout = styled(Row)`\n  flex-direction: ${prop =>\n    prop.layout === 'register' ? 'row-reverse' : 'row'};\n  min-height: 90vh;\n`;\n\nexport const BigColumn = styled(Col)`\n  border-right: ${prop =>\n    prop.layout === 'register' ? 'none' : '4px solid black'};\n  border-left: ${prop =>\n    prop.layout === 'register' ? '4px solid black' : 'none'};\n  background-image: ${prop => setBgImage(prop.layout)};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${prop => setBigBgImage(prop.layout)};\n  }\n`;\n\nexport const SmallColumn = styled(Col)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import Container from 'react-bootstrap/Container';\nimport { Layout, BigColumn, SmallColumn } from './AuthLayout.styled';\n\nexport const AuthLayout = ({ children, layout = 'login' }) => {\n  return (\n    <Container fluid>\n      <Layout layout={layout}>\n        <BigColumn xs={8} layout={layout}></BigColumn>\n        <SmallColumn>{children}</SmallColumn>\n      </Layout>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const FormContainer = styled(Form)`\n  width: 100%;\n  padding: 0 20px;\n  font-size: 18px;\n`;\n\nexport const Label = styled(Form.Label)`\n  display: block;\n`;\n\nexport const Input = styled(Form.Control)`\n  :focus,\n  :active {\n    outline: 4px solid #c0bdbd;\n  }\n`;\n\nexport const StyledBtn = styled(Button)`\n  position: relative;\n  left: 50%;\n  margin-top: 20px;\n  padding: 5px 30px;\n  font-size: 18px;\n  transform: translate(-50%);\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/operations';\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport Form from 'react-bootstrap/Form';\nimport { AuthLayout } from 'components/AuthLayout/AuthLayout';\nimport { FormContainer, StyledBtn, Label, Input } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const LoginSchema = object().shape({\n    email: string()\n      .matches(/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/, {\n        message: 'Invalid email',\n        excludeEmptyString: true,\n      })\n      .required('Required'),\n    password: string().required('Required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: values => {\n      dispatch(logIn(values));\n    },\n  });\n\n  return (\n    <AuthLayout>\n      <FormContainer onSubmit={formik.handleSubmit}>\n        <Label>\n          Email address\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            isValid={formik.touched.email}\n            isInvalid={formik.errors.email}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {formik.errors.email}\n          </Form.Control.Feedback>\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            isValid={formik.touched.password}\n            isInvalid={formik.errors.password}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {formik.errors.password}\n          </Form.Control.Feedback>\n        </Label>\n        <StyledBtn variant=\"dark\" type=\"submit\">\n          Log In\n        </StyledBtn>\n      </FormContainer>\n    </AuthLayout>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Layout","styled","Row","prop","layout","BigColumn","Col","image_reg","image","bigImage_reg","bigImage","SmallColumn","AuthLayout","children","Container","fluid","xs","FormContainer","Form","Label","Input","StyledBtn","Button","dispatch","useDispatch","LoginSchema","object","shape","email","string","matches","message","excludeEmptyString","required","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","handleSubmit","name","type","placeholder","onChange","handleChange","value","isValid","touched","isInvalid","errors","variant"],"sourceRoot":""}